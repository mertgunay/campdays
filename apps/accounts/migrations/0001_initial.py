# Generated by Django 2.0.3 on 2018-05-24 09:23

import accounts.models
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=accounts.models.users_upload_location, width_field='width_field')),
                ('width_field', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('height_field', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('gender', models.CharField(choices=[('female', 'Kadın'), ('male', 'Erkek')], max_length=10, verbose_name='Cinsiyet')),
                ('username', models.CharField(error_messages={'unique': 'Bu kullanıcı adı mevcut'}, max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-posta')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='İsim')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Soyisim')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
